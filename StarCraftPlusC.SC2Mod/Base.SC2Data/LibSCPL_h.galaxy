include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: StarCraftPlus Lib
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libSCPL_ge_UpgradeNotificationsSlotStatus_HiddenOccupiedwithrunningUpgrade = 0;
const int libSCPL_ge_UpgradeNotificationsSlotStatus_VisibleOccupiedwithrunningUpgrade = 1;
const int libSCPL_ge_UpgradeNotificationsSlotStatus_OccupiedwithdestroyedcompletedUpgrade = 2;
const int libSCPL_ge_UpgradeNotificationsSlotStatus_NoUpgrade = 3;
const int libSCPL_ge_GenericEvent_ResourceSpend = 0;
const int libSCPL_ge_GenericEvent_HarvesterUpdate = 1;
string libSCPL_ge_GenericEvent_Ident (int lp_val);
const int libSCPL_ge_GenericParameter_TriggeringPlayer = 0;
string libSCPL_ge_GenericParameter_Ident (int lp_val);

// Constants
const int libSCPL_gv_upgradeNotificationsMaxUISlots = 50;
const fixed libSCPL_gv_upgradeNotificationsVisibleTime = 15.0;
const fixed libSCPL_gv_upgradeDisplayTime = 2.0;
const int libSCPL_gv_cHARGEMAX = 99;

// Structures
struct libSCPL_gs_UpgradeNotifications {
    bool[17] lv_updateThreadRunning;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1] lv_itemIcon;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1] lv_itemName;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1] lv_itemPanel;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1] lv_itemProgressBar;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1] lv_itemTimerStatus;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1] lv_itemTimerLabel;
    timer[libSCPL_gv_upgradeNotificationsMaxUISlots + 1][17] lv_timerDestruction;
    int[libSCPL_gv_upgradeNotificationsMaxUISlots + 1][17] lv_slotStatus;
    unit[101][17] lv_slotFacility;
    int[17] lv_slotLastUsed;
};

struct libSCPL_gs_Labels {
    int lv_iconSize;
    int lv_iconSizeEgg;
    int lv_iconSizeTechLab;
    string[17] lv_colorStrings;
};

struct libSCPL_gs_AutoCreepLineage {
    unit lv_zzParent;
    unit lv_head;
    unit lv_target;
    unitgroup lv_zzUnitGroup;
};

struct libSCPL_gs_Constant {
    int lv_spendBufferMinerals;
    int lv_spendBufferVespene;
    fixed lv_spendTickIncrement;
    fixed lv_spendTickIncrementBoosted;
    fixed lv_townHallResourceRadius;
    fixed lv_gameSpeedFactor;
    fixed lv_harvesterIncomeMinerals;
    fixed lv_harvesterIncomeMineralsRich;
    fixed lv_harvesterIncomeMineralsMULE;
    fixed lv_harvesterIncomeVespene;
};

struct libSCPL_gs_Player {
    fixed lv_resourceSpendMinerals;
    fixed lv_resourceSpendVespene;
    fixed lv_resourceGainMinerals;
    fixed lv_resourceGainVespene;
    unitgroup lv_globalZerg_AutoCreepNodeTargets;
    libSCPL_gs_AutoCreepLineage[257] lv_globalZerg_AutoCreepLineage;
    int lv_globalZerg_AutoCreepLineageCount;
    bool lv_globalTerran_AutoWallToggle;
    bool lv_globalZerg_CreepSpreadToggle;
    bool lv_globalZerg_LarvaSpawnToggle;
    unit lv_globalRallyCaster;
    unit[4] lv_globalRallyTarget;
    unit[4] lv_globalRallyTargetUnit;
    unitgroup[4] lv_globalRallyGroup;
    unitgroup[11] lv_controlGroup;
    timer[11] lv_controlGroupJumpTimer;
    bool[4] lv_controlGroupAutoAdd;
};

struct libSCPL_gs_Map {
    region lv_baseRegion;
};

struct libSCPL_gs_UI {
    int lv_resourceMineralSpend;
    int lv_resourceVespeneSpend;
    int lv_resourceMineralSpendAttention;
    int lv_resourceVespeneSpendAttention;
    int lv_consoleActiveCommandCard;
    int lv_consoleRallyCommandCard;
    int[11] lv_consoleControlGroupButton;
    int[11] lv_consoleControlGroupButtonAdd;
    int[11] lv_consoleControlGroupButtonAssign;
    int[11] lv_consoleControlGroupIcon;
    int[11] lv_consoleControlGroupLabel;
};

// Variable Declarations
libSCPL_gs_UpgradeNotifications libSCPL_gv_upgradeNotifications;
libSCPL_gs_Labels libSCPL_gv_labels;
playergroup libSCPL_gv_labelsObs;
libSCPL_gs_Constant libSCPL_gv_constants;
libSCPL_gs_Player[17] libSCPL_gv_player;
libSCPL_gs_Map libSCPL_gv_map;
libSCPL_gs_UI libSCPL_gv_uI;

// Function Declarations
void libSCPL_gf_DebugSpawnBuildingsZerg (int lp_playerIndex);
void libSCPL_gf_DebugSpawnBuildingsTerran (int lp_playerIndex);
unit libSCPL_gf_DebugPlayerUnit (int lp_playerIndex, string lp_unitType);
unit libSCPL_gf_DebugSelectedUnit (int lp_playerIndex);
void libSCPL_gf_DebugCreateUnitNearBase (int lp_playerIndex, string lp_unitType, fixed lp_offset);
void libSCPL_gf_DebugCreateUnitNearBaseEnemies (int lp_playerIndex, int lp_enemyIndex, string lp_unitType, fixed lp_offset);
void libSCPL_gf_InitializeSpendOverTime ();
void libSCPL_gf_PlayerResourcesAdd (int lp_playerIndex, fixed lp_minerals, fixed lp_vespene);
void libSCPL_gf_PlayerResourcesReset (int lp_playerIndex);
void libSCPL_gf_PlayerResourcesSubtract (int lp_playerIndex, fixed lp_minerals, fixed lp_vespene);
void libSCPL_gf_UnitStatusPauseProgressBar (unit lp_statusUnit, unit lp_progressUnit, int lp_progressIndex, bool lp_pause);
void libSCPL_gf_UnitStatusPauseProgressUnit (unit lp_statusUnit, unit lp_progressUnit, int lp_progressIndex, bool lp_pause);
int libSCPL_gf_UsedTrainingSlotCount (unit lp_unit);
fixed libSCPL_gf_PlayerAvailableMinerals (int lp_playerIndex);
fixed libSCPL_gf_PlayerAvailableVespene (int lp_playerIndex);
bool libSCPL_gf_UnitProgressStateIsProgressing (unit lp_unit, int lp_slot);
void libSCPL_gf_UnitProtossProgressSet (unit lp_unit, fixed lp_progress);
fixed libSCPL_gf_UnitProtossProgress (unit lp_unit);
void libSCPL_gf_UnitProtossProgressMineralsSet (unit lp_unit, fixed lp_progress);
fixed libSCPL_gf_UnitProtossProgressMinerals (unit lp_unit);
void libSCPL_gf_UnitProtossProgressVespeneSet (unit lp_unit, fixed lp_progress);
fixed libSCPL_gf_UnitProtossProgressVespene (unit lp_unit);
fixed libSCPL_gf_TickIncrementActual (unit lp_parentUnit);
fixed libSCPL_gf_TimeExpectedActual (unit lp_parentUnit, int lp_slot);
fixed libSCPL_gf_NormalizeBuildingProgress (fixed lp_value);
void libSCPL_gf_UnitProgressRefundSet (unit lp_unit, int lp_resource, fixed lp_refundValue);
fixed libSCPL_gf_UnitProgressRefund (unit lp_unit, int lp_resource);
void libSCPL_gf_UnitProgressCarryOverSet (unit lp_unit, int lp_resource, fixed lp_refundValue);
fixed libSCPL_gf_UnitProgressCarryOver (unit lp_unit, int lp_resource);
void libSCPL_gf_BuildingPauseStateSet (unit lp_unit, bool lp_state);
bool libSCPL_gf_BuildingPauseState (unit lp_unit);
string libSCPL_gf_AbilityMorphUnit (string lp_ability, unit lp_unit);
string libSCPL_gf_AbilityMorphParentUnit (unit lp_unit);
void libSCPL_gf_UnitMorphProgressSet (unit lp_unit, fixed lp_progress);
fixed libSCPL_gf_UnitMorphProgress (unit lp_unit);
bool libSCPL_gf_RegisterExists (string lp_unitType);
fixed libSCPL_gf_GetBuildTime (string lp_object);
fixed libSCPL_gf_GetCostMinerals (string lp_object);
fixed libSCPL_gf_GetCostVespene (string lp_object);
void libSCPL_gf_RegisterBuildTime (string lp_object, fixed lp_cost);
void libSCPL_gf_RegisterCostMinerals (string lp_object, fixed lp_cost);
void libSCPL_gf_RegisterCostVespene (string lp_object, fixed lp_cost);
fixed libSCPL_gf_UnitProgressState (unit lp_unit, int lp_slot);
void libSCPL_gf_UnitProgressStateSet (unit lp_unit, int lp_slot, fixed lp_value);
void libSCPL_gf_DebugPanelUpdateSpendOverTime ();
void libSCPL_gf_InitializeGlobalRallyCaster (int lp_playerIndex);
void libSCPL_gf_InitializeAutomatedWorkerProduction ();
void libSCPL_gf_AutoWorkerProduction (unit lp_townHall, int lp_playerIndex);
void libSCPL_gf_AutoWorkerProductionZerg (unit lp_townHall, int lp_playerIndex, int lp_larvaLeftover);
void libSCPL_gf_AutoWorkerProductionZergInitial (unit lp_townHall, int lp_playerIndex, int lp_larvaLeftover);
void libSCPL_gf_WarpGateUpdateUI (int lp_playerIndex);
void libSCPL_gf_UnitStatusEvaluateProgressBar (unit lp_statusUnit);
void libSCPL_gf_AutoCreepTargetNodesInitialize ();
void libSCPL_gf_AutoCreepTargetNodesGenerateBase (int lp_playerIndex);
void libSCPL_gf_AutoCreepTargetNodesGenerateGrid (playergroup lp_zergPlayers);
void libSCPL_gf_AutoCreepTargetNodeCreate (int lp_playerIndex, point lp_point);
void libSCPL_gf_AutoCreepEvaluateLineageTargets (int lp_playerIndex);
void libSCPL_gf_AutoCreepLineageSpread (int lp_playerIndex, unit lp_node);
bool libSCPL_gf_PointsHaveHeightDifference (point lp_pointA, point lp_pointB);
point libSCPL_gf_AutoCreepPointBest (unit lp_node, unit lp_target);
int libSCPL_gf_AutoCreepPointValid (unit lp_node, point lp_point);
void libSCPL_gf_AutoCreepTargetNodesSort (int lp_playerIndex);
void libSCPL_gf_AutoCreepDebugAll (int lp_playerIndex);
void libSCPL_gf_AutoCreepDebug (unit lp_unit);
void libSCPL_gf_InitializeUIHookups ();
void libSCPL_gf_UpgradeNotificationsRemoveRunningUpgrade (int lp_slot, int lp_playerIndex);
void libSCPL_gf_UpgradeNotificationsRemoveRunningUpgradeImmediate (int lp_slot, int lp_playerIndex);
int libSCPL_gf_UpgradeNotificationsFacilitySlot (unit lp_facility, int lp_playerIndex);
string libSCPL_gf_UpgradeNotificationsUpgradeImage (string lp_upgrade, int lp_playerIndex);
text libSCPL_gf_UpgradeNotificationsUpgradeName (string lp_upgrade, int lp_playerIndex);
bool libSCPL_gf_UpgradeNotificationsUpgradeNeedsToBeVisible (fixed lp_remainingTime);
void libSCPL_gf_UpgradeNotificationsUpdateThread (int lp_playerIndex);
void libSCPL_gf_UpgradeNotificationsSetStatusLabel (int lp_slot, text lp_status, int lp_playerIndex);
void libSCPL_gf_UpgradeNotificationsSetSlotData (int lp_slot, text lp_name, string lp_icon, bool lp_visible, int lp_playerIndex);
void libSCPL_gf_UpgradeNotificationsSwapSlotWithLowestInvisibleOne (int lp_slot, int lp_playerIndex);
void libSCPL_gf_UpgradeNotificationsSwapSlotInformation (int lp_slotA, int lp_slotB, int lp_playerIndex);
void libSCPL_gf_UpgradeNotificationsUpdateProgressData (int lp_slot, int lp_playerIndex);
bool libSCPL_gf_LabelsPlusUnitUsesCustomStatusBar (unit lp_unit);
bool libSCPL_gf_LabelsPlusUnitMorphTwoStage (unit lp_unit);
int libSCPL_gf_LabelsPlusUnitIconSize (unit lp_productionUnit);
void libSCPL_gf_ResourceDisplayGainAdd (int lp_playerIndex, fixed lp_minerals, fixed lp_vespene);
void libSCPL_gf_ResourceDisplaySpendAdd (int lp_playerIndex, fixed lp_minerals, fixed lp_vespene);
void libSCPL_gf_ResourceDisplaySpendSubtract (int lp_playerIndex, fixed lp_minerals, fixed lp_vespene);
void libSCPL_gf_ResourceDisplaySpendUpdate (unit lp_unit, fixed lp_costTime, fixed lp_costMinerals, fixed lp_costVespene);
void libSCPL_gf_ControlGroupUnitPreserve (unit lp_parentUnit, unit lp_childUnit);
void libSCPL_gf_ControlGroupDamagePulse (unit lp_unit);
void libSCPL_gf_ControlGroupColorize (int lp_playerIndex, int lp_controlGroupIndex);
int libSCPL_gf_UnitGroupHealthIndex (unitgroup lp_unitGroup);
void libSCPL_gf_ControlGroupUnitsUpdate (int lp_controlGroupIndex, int lp_playerIndex);
void libSCPL_gf_ControlGroupUnitsAssign (unitgroup lp_unitGroup, int lp_controlGroupIndex, int lp_playerIndex);
void libSCPL_gf_ControlGroupUnitsAdd (unitgroup lp_unitGroup, int lp_controlGroupIndex, int lp_playerIndex);
string libSCPL_gf_ControlGroupUnitsGetPriorityType (unitgroup lp_controlGroup);
void libSCPL_gf_TriggerEventRegisterUnitDies (trigger lp_trigger, unit lp_unit);
void libSCPL_gf_TriggerEventRegisterDialogItemClicked (trigger lp_trigger, int lp_dialogItem);
void libSCPL_gf_DebugTextTag (point lp_point, string lp_string, fixed lp_duration);
unitgroup libSCPL_gf_MapVespeneGeysers ();
unit libSCPL_gf_PlayerTownHallClosest (point lp_point, int lp_playerIndex);
int libSCPL_gf_PlayerTownHallSaturationCount (unit lp_townHall, int lp_playerIndex);
int libSCPL_gf_PlayerTownHallWorkerCount (unit lp_townHall, int lp_playerIndex);
int libSCPL_gf_PlayerTownHallWorkerQueue (unit lp_townHall, int lp_playerIndex, bool lp_includeCocoons);
unitgroup libSCPL_gf_PlayerHarvestableMinerals (int lp_playerIndex);
unitgroup libSCPL_gf_PlayerHarvestableGas (int lp_playerIndex);
unitgroup libSCPL_gf_PlayerTownHalls (int lp_playerIndex);
unitgroup libSCPL_gf_MapHarvestableMinerals ();
unitgroup libSCPL_gf_UnitsInUnitGroupMatchingChargeLink (unitgroup lp_unitGroup, string lp_chargeLink, fixed lp_chargeValue);
void libSCPL_gf_UnitChargeLinkSet (unit lp_unit, string lp_chargeLink, fixed lp_chargeValue);
void libSCPL_gf_UnitChargeLinkAdd (unit lp_unit, string lp_chargeLink, fixed lp_chargeValue);
fixed libSCPL_gf_UnitChargeLink (unit lp_unit, string lp_chargeLink);
void libSCPL_gf_ResourceSpendChanges (trigger t);
void libSCPL_gf_GenericEventResourceSpendChanges (int lp_triggeringPlayer);
void libSCPL_gf_ResourceHarvesterUpdate01 (trigger t);
void libSCPL_gf_ResourceHarvesterUpdate02 (trigger t);
void libSCPL_gf_GenericEventResourceSpendChanges2 (int lp_triggeringPlayer);

// Trigger Declarations
trigger libSCPL_gt_InitializationPlus;
trigger libSCPL_gt__1;
trigger libSCPL_gt__0;
trigger libSCPL_gt_ProgressMorphRefund01;
trigger libSCPL_gt_ProgressMorphStart01;
trigger libSCPL_gt_ProgressMorphRefund02;
trigger libSCPL_gt_ProgressMorphStart02;
trigger libSCPL_gt_ProgressMorphCancel;
trigger libSCPL_gt_ProgressUpgradeRefund;
trigger libSCPL_gt_ProgressUpgradeStart;
trigger libSCPL_gt_ProgressProtossUpgradeStart;
trigger libSCPL_gt_ProgressProtossUpgradeCancel;
trigger libSCPL_gt_ProgressArmamentStartRefund;
trigger libSCPL_gt_ProgressArmamentStart;
trigger libSCPL_gt_ProgressBuildingStartRefund;
trigger libSCPL_gt_ProgressBuildingStart;
trigger libSCPL_gt_ProgressBuildingSCVStart;
trigger libSCPL_gt_ProgressBuildingSCVResume;
trigger libSCPL_gt_ProgressBuildingSCVRefundUndo;
trigger libSCPL_gt_ProgressBuildingCancel;
trigger libSCPL_gt_ProgressUnitStartRefund;
trigger libSCPL_gt_ProgressUnitStartRefundTerranDummy;
trigger libSCPL_gt_ProgressUnitStart;
trigger libSCPL_gt_ProgressProtossUnitStart;
trigger libSCPL_gt_ProgressProtossUnitCancel;
trigger libSCPL_gt_ProgressTrainWarpGateRefund;
trigger libSCPL_gt_ProgressUnitStartCommented;
trigger libSCPL_gt_ProgressUnitStartCommentedTest;
trigger libSCPL_gt_ProgressUnitCancelCommented;
trigger libSCPL_gt_GlobalRally00TargetCreated;
trigger libSCPL_gt_GlobalRally01TargetCreated;
trigger libSCPL_gt_GlobalRally02TargetCreated;
trigger libSCPL_gt_GlobalRally00ProducerCreated;
trigger libSCPL_gt_GlobalRally01ProducerCreated;
trigger libSCPL_gt_GlobalRally02ProducerCreated;
trigger libSCPL_gt_GlobalRally00ProducerCreatedZerg;
trigger libSCPL_gt_GlobalRally01ProducerCreatedZerg;
trigger libSCPL_gt_GlobalRally02ProducerCreatedZerg;
trigger libSCPL_gt_GlobalRallyProtossWarpGateUnitCreated;
trigger libSCPL_gt_GlobalRally00AttachUnit;
trigger libSCPL_gt_GlobalRally01AttachUnit;
trigger libSCPL_gt_GlobalRally02AttachUnit;
trigger libSCPL_gt_ControlGroupAutoAddToggleT1;
trigger libSCPL_gt_ControlGroupAutoAddToggleT2;
trigger libSCPL_gt_ControlGroupAutoAddToggleT3;
trigger libSCPL_gt_ControlGroupAutoAddT1;
trigger libSCPL_gt_ControlGroupAutoAddT2;
trigger libSCPL_gt_ControlGroupAutoAddT3;
trigger libSCPL_gt_ControlGroupAutoAddT1Zerg;
trigger libSCPL_gt_ControlGroupAutoAddT2Zerg;
trigger libSCPL_gt_ControlGroupAutoAddT3Zerg;
trigger libSCPL_gt_AutoWorkerProductionCheckWorkerSlot;
trigger libSCPL_gt_AutoWorkerProductionCheckWorkerSlotZerg;
trigger libSCPL_gt_AutoWorkerProductionCheckVespeneHarvester;
trigger libSCPL_gt_AutoWorkerProductionCheckVespeneHarvesterZerg;
trigger libSCPL_gt_AutoWorkerProductionCheckMorphConstructionZerg;
trigger libSCPL_gt_AutoWorkerProductionCheckTownHallUpgrade;
trigger libSCPL_gt_AutoWorkerProductionCheckTownHallLand;
trigger libSCPL_gt_AutoWorkerProductionCheckExpansion;
trigger libSCPL_gt_AutoWorkerGatherVespene;
trigger libSCPL_gt_AutoWorkerSetHarvestState;
trigger libSCPL_gt_AutoWorkerSetHarvestStateNone;
trigger libSCPL_gt_AutoWorkerSetConstructionState;
trigger libSCPL_gt_AutoWorkerIdleHarvestResume;
trigger libSCPL_gt_UnitLifeAndShieldScalingOnCreation;
trigger libSCPL_gt_WarpGateResearchUpgradeAllGateways;
trigger libSCPL_gt_WarpGateResearchGatewayBuilt;
trigger libSCPL_gt_WarpGateChargeCountAdd;
trigger libSCPL_gt_WarpGateChargeCountRemove;
trigger libSCPL_gt_NexusChargeCountAdd;
trigger libSCPL_gt_NexusChargeCountRemove;
trigger libSCPL_gt_UCBChargeLinkArchonMorph;
trigger libSCPL_gt_BarracksTrainStartStop;
trigger libSCPL_gt_MuleHarvestNearestResoures;
trigger libSCPL_gt_UCBChargeLinkBarracksAddonCreate;
trigger libSCPL_gt_UCBChargeLinkBarracksAddonDestroy;
trigger libSCPL_gt_UCBChargeLinkFactoryAddonCreate;
trigger libSCPL_gt_UCBChargeLinkFactoryAddonDestroy;
trigger libSCPL_gt_UCBChargeLinkStarportAddonCreate;
trigger libSCPL_gt_UCBChargeLinkStarportAddonDestroy;
trigger libSCPL_gt_UCBChargeLinkCommandCenterMorphStart;
trigger libSCPL_gt_UCBChargeLinkCommandCenterMorphCancel;
trigger libSCPL_gt_UCBAutoWallRaise;
trigger libSCPL_gt_UCBAutoWallLower;
trigger libSCPL_gt_UCBAutoWallToggleOn;
trigger libSCPL_gt_UCBAutoWallToggleOff;
trigger libSCPL_gt_PlayerAutoWallUnitCreated;
trigger libSCPL_gt_PlayerZergNydusWormPlacementRedirect;
trigger libSCPL_gt_AutoCreepTumorLineageParent;
trigger libSCPL_gt_AutoCreepTumorLineageSpread;
trigger libSCPL_gt_AutoCreepTumorLineageChild;
trigger libSCPL_gt_AutoCreepTumorNodeTargetReached;
trigger libSCPL_gt_AutoCreepDebugDestroy;
trigger libSCPL_gt_UCBChargeLinkHydraliskDenMorphStart;
trigger libSCPL_gt_UCBChargeLinkHydraliskDenMorphCancel;
trigger libSCPL_gt_UCBChargeLinkSpireMorphStart;
trigger libSCPL_gt_UCBChargeLinkSpireMorphCancel;
trigger libSCPL_gt_UCBChargeLinkHatcheryMorphStart;
trigger libSCPL_gt_UCBChargeLinkHatcheryMorphCancel;
trigger libSCPL_gt_UCBChargeLinkLairMorphStart;
trigger libSCPL_gt_UCBChargeLinkLairMorphCancel;
trigger libSCPL_gt_UCBChargeLinkZerglingMorphStart;
trigger libSCPL_gt_UCBChargeLinkZerglingMorphCancel;
trigger libSCPL_gt_UCBChargeLinkOverlordMorphStart;
trigger libSCPL_gt_UCBChargeLinkOverlordMorphCancel;
trigger libSCPL_gt_UCBChargeLinkRavagerMorphStart;
trigger libSCPL_gt_UCBChargeLinkRavagerMorphCancel;
trigger libSCPL_gt_UCBChargeLinkLurkerMorphStart;
trigger libSCPL_gt_UCBChargeLinkLurkerMorphCancel;
trigger libSCPL_gt_UCBChargeLinkBroodlordMorphStart;
trigger libSCPL_gt_UCBChargeLinkBroodlordMorphCancel;
trigger libSCPL_gt_UCBAutoCreepSpreadToggleOn;
trigger libSCPL_gt_UCBAutoCreepSpreadToggleOff;
trigger libSCPL_gt_PlayerAutoCreepSpreadUnitCreated;
trigger libSCPL_gt_UCBAutoLarvaSpawnToggleOn;
trigger libSCPL_gt_UCBAutoLarvaSpawnToggleOff;
trigger libSCPL_gt_PlayerAutoLarvaSpawnUnitCreated;
trigger libSCPL_gt_UpgradeNotificationsInitialization;
trigger libSCPL_gt_UpgradeNotificationsResearchStarted;
trigger libSCPL_gt_UpgradeNotificationsResearchCancelled;
trigger libSCPL_gt_UpgradeNotificationsResearchCompleted;
trigger libSCPL_gt_UpgradeNotificationsDestructionTimerRunsOut;
trigger libSCPL_gt_LabelsPlusUnitCreated;
trigger libSCPL_gt_LabelsPlusUnitTrainingStarted;
trigger libSCPL_gt_LabelsPlusUnitTrainingStopped;
trigger libSCPL_gt_LabelsPlusUnitTrainingReactorDestroyed;
trigger libSCPL_gt_LabelsPlusResearchStarted;
trigger libSCPL_gt_LabelsPlusResearchStopped;
trigger libSCPL_gt_LabelsPlusConstructionStarted;
trigger libSCPL_gt_LabelsPlusConstructionStopped;
trigger libSCPL_gt_LabelsPlusMorphStarted;
trigger libSCPL_gt_LabelsPlusMorphStopped;
trigger libSCPL_gt_ResourceDisplayMineralCreate;
trigger libSCPL_gt_ResourceDisplayMineralRichCreate;
trigger libSCPL_gt_ResourceDisplayMineralMULECreate;
trigger libSCPL_gt_ResourceDisplayVespeneCreate;
trigger libSCPL_gt_ResourceDisplayMineralDestroy;
trigger libSCPL_gt_ResourceDisplayMineralRichDestroy;
trigger libSCPL_gt_ResourceDisplayMineralMULEDestroy;
trigger libSCPL_gt_ResourceDisplayVespeneDestroy;
trigger libSCPL_gt_ResourceDisplaySpend;
trigger libSCPL_gt_ControlGroupAssign;
trigger libSCPL_gt_ControlGroupAdd;
trigger libSCPL_gt_ControlGroupSelect;
trigger libSCPL_gt_ControlGroupUnitDeath;
trigger libSCPL_gt_ControlGroupArchon;
trigger libSCPL_gt_ControlGroupBaneling;
trigger libSCPL_gt_ControlGroupBanelingFinish;
trigger libSCPL_gt_ControlGroupUnitDamaged;
trigger libSCPL_gt_ControlGroupUnitDamagedGroupUpdate;

// Library Initialization
void libSCPL_InitVariables ();

