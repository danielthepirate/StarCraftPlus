//DialogControlGetPropertyAsText (int control, int property, int player);
//DialogControlHookupStandard (int type, string inTemplate);
//c_triggerControlEventTypeHotkeyPressed
//c_triggerControlEventTypeClick
//c_triggerControlTypeButton
//riggerAddEventDialogControl (trigger t, int player, int control, int eventType);

const int c_ACG_MaxControlGroups = 10;
const int c_ACG_MaxSubGroups = 6;
const string c_ACG_UIBasePath ="UIContainer/ConsoleUIContainer/AxiomACGTab/";

string [c_ACG_MaxControlGroups] ACG_GroupButton_DlgPath;

int ACG_Group01_Dlg;

int ACG_Group01_CmdDlg1;
int ACG_Group01_CmdIcon1;
int ACG_Group01_CmdDlg2;
int ACG_Group01_CmdIcon2;

string ACG_Group01_CmdIconPath1 = "UIContainer/ConsoleUIContainer/AxiomACGCommandPanel/CommandPanel01Icon/Icon";
string ACG_Group01_CmdIconPath2 = "UIContainer/ConsoleUIContainer/AxiomACGCommandPanel/CommandPanel02Icon/Icon";
string ACG_Group01_CmdDlgPath1 = "UIContainer/ConsoleUIContainer/AxiomACGCommandPanel/CommandPanel01";
string ACG_Group01_CmdDlgPath2 = "UIContainer/ConsoleUIContainer/AxiomACGCommandPanel/CommandPanel02";
unitgroup[c_maxPlayers][c_ACG_MaxControlGroups] ACG_ControlGroups;
unitgroup SelectionP1;
unitgroup SelectionP1_1;
unitgroup SelectionP1_2;

void InitACGUIPaths(){
	int i;
	int j;
	string s;
	for(i = 1;i<=c_ACG_MaxControlGroups;i+=1) {
		ACG_GroupButton_DlgPath[i] = c_ACG_UIBasePath + "AxiomACGContainer/Group0"+IntToString(i);
		s = ACG_GroupButton_DlgPath[i];
		TriggerDebugOutput(1, StringToText(s), true);
		for(j = 1;j<=c_ACG_MaxSubGroups;j+=1) {
			s = c_ACG_UIBasePath + "AxiomACGCommandPanel/Group0"+IntToString(i)+"/CommandPanel0"+IntToString(j)+"Icon/Icon";
			TriggerDebugOutput(1, StringToText(s), true);
		}
	}
}


bool ACG_ButtonClickResponse_Func (bool testConds, bool runActions) {
	int player = EventPlayer();
	string unittype;
	string icon;
	unitgroup ug = UnitGroupSelected(player);
	playergroup pg = PlayerGroupSingle(player);
	unit u;
	
	SelectionP1 = UnitGroupCopy(ug);
	
	//EventDialogControl
	
	u = UnitGroupUnit(ug, 1);
	unittype = UnitGetType(u);
	icon = CatalogFieldValueGet(c_gameCatalogActor, unittype, "UnitIcon", c_playerAny);
	SelectionP1_1 = UnitGroupFilter (unittype, player, ug, null, 0);
	UnitGroupRemoveUnitGroup (ug, SelectionP1_1);
	TriggerDebugOutput(1, StringToText(icon), true);
	DialogControlSetPropertyAsString (ACG_Group01_CmdIcon1, c_triggerControlPropertyImage, pg, icon);
	
	u = UnitGroupUnit(ug, 1);
	unittype = UnitGetType(u);
	icon = CatalogFieldValueGet(c_gameCatalogActor, unittype, "UnitIcon", c_playerAny);
	SelectionP1_2 = UnitGroupFilter (unittype, player, ug, null, 0);
	UnitGroupRemoveUnitGroup (ug, SelectionP1_2);
	TriggerDebugOutput(1, StringToText(icon), true);
	DialogControlSetPropertyAsString (ACG_Group01_CmdIcon2, c_triggerControlPropertyImage, pg, icon);
	
	
	DialogControlSetPropertyAsUnitGroup(ACG_Group01_CmdDlg1, c_triggerControlPropertyUnitGroup, pg, SelectionP1_1);
	DialogControlSetPropertyAsUnitGroup(ACG_Group01_CmdDlg2, c_triggerControlPropertyUnitGroup, pg, SelectionP1_2);
	return true;
}

void InitACG() {
    //test
	int player = 1;
	trigger t = TriggerCreate("ACG_ButtonClickResponse_Func");

	InitACGUIPaths();

	ACG_Group01_Dlg = DialogControlHookupStandard (c_triggerControlTypeButton, ACG_Group01_DlgPath);
	ACG_Group01_CmdDlg1 = DialogControlHookupStandard (c_triggerControlTypeCommandPanel, ACG_Group01_CmdDlgPath1);
	ACG_Group01_CmdDlg2 = DialogControlHookupStandard (c_triggerControlTypeCommandPanel, ACG_Group01_CmdDlgPath2);
	
	ACG_Group01_CmdIcon1 = DialogControlHookupStandard (c_triggerControlTypeImage, ACG_Group01_CmdIconPath1);
	ACG_Group01_CmdIcon2 = DialogControlHookupStandard (c_triggerControlTypeImage, ACG_Group01_CmdIconPath2);
	
	TriggerAddEventDialogControl (t, player, ACG_Group01_Dlg, c_triggerControlEventTypeClick);
	TriggerAddEventDialogControl (t, player, ACG_Group01_Dlg, c_triggerControlEventTypeHotkeyPressed);
	
}