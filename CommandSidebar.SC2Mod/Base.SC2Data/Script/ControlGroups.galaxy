//DialogControlGetPropertyAsText (int control, int property, int player);
//DialogControlHookupStandard (int type, string inTemplate);
//c_triggerControlEventTypeHotkeyPressed
//c_triggerControlEventTypeClick
//c_triggerControlTypeButton
//riggerAddEventDialogControl (trigger t, int player, int control, int eventType);

const int c_ACG_MaxControlGroups = 10;
const int c_ACG_MaxSubGroups = 6;
const string c_ACG_UIBasePath ="UIContainer/ConsoleUIContainer/AxiomACGTab/";

unitgroup [c_maxPlayers] ACG_Dummies;

string ACG_GroupTab_DlgPath = "UIContainer/ConsoleUIContainer/AxiomACGTab";
int ACG_GroupTab_Dlg;

string [c_ACG_MaxControlGroups] ACG_GroupButton_DlgPath;
int [c_ACG_MaxControlGroups] ACG_GroupButton_Dlg;

string [c_ACG_MaxControlGroups] ACG_GroupButtonAssign_DlgPath;
int [c_ACG_MaxControlGroups] ACG_GroupButtonAssign_Dlg;

string [c_ACG_MaxControlGroups][c_ACG_MaxSubGroups] ACG_SubGroupCmd_DlgPath;
int [c_ACG_MaxControlGroups][c_ACG_MaxSubGroups] ACG_SubGroupCmd_Dlg;
string [c_ACG_MaxControlGroups][c_ACG_MaxSubGroups] ACG_SubGroupIcon_DlgPath;
int [c_ACG_MaxControlGroups][c_ACG_MaxSubGroups] ACG_SubGroupIcon_Dlg;

int ACG_Group01_Dlg;

int ACG_Group01_CmdDlg1;
int ACG_Group01_CmdIcon1;
int ACG_Group01_CmdDlg2;
int ACG_Group01_CmdIcon2;

unitgroup[c_maxPlayers][c_ACG_MaxControlGroups] ACG_ControlGroups;
unitgroup[c_maxPlayers][c_ACG_MaxControlGroups][c_ACG_MaxSubGroups] ACG_ControlSubGroups;
unitgroup SelectionP1;
unitgroup SelectionP1_1;
unitgroup SelectionP1_2;

void InitACGUIPaths(){
	int i;
	int j;
	string s;
	for(i = 0;i<c_ACG_MaxControlGroups;i+=1) {
		ACG_GroupButton_DlgPath[i] = c_ACG_UIBasePath + "AxiomACGContainer/Group0"+IntToString(i);
		ACG_GroupButtonAssign_DlgPath[i] = c_ACG_UIBasePath + "AxiomACGContainer/Assign0"+IntToString(i);
		s = ACG_GroupButton_DlgPath[i];
		// TriggerDebugOutput(1, StringToText(s), true);
		
		// SUBGROUP STUFF REMOVED
		// for(j = 1;j<=c_ACG_MaxSubGroups;j+=1) {
			// ACG_SubGroupCmd_DlgPath[i][j-1] = c_ACG_UIBasePath + "AxiomACGCommandPanel/Group0"+IntToString(i)+"/CommandPanel0"+IntToString(j);
			// s = ACG_SubGroupCmd_DlgPath[i][j-1];
			// TriggerDebugOutput(1, StringToText(s), true);
			// ACG_SubGroupIcon_DlgPath[i][j-1] = c_ACG_UIBasePath + "AxiomACGCommandPanel/Group0"+IntToString(i)+"/CommandPanel0"+IntToString(j)+"Icon/Icon";
			// s = ACG_SubGroupIcon_DlgPath[i][j-1];
			// TriggerDebugOutput(1, StringToText(s), true);
		// }
	}
}

void InitACGUIHookups(){
	int i;
	int j;
	string s;
	trigger t = TriggerCreate("ACG_ButtonClickResponse_Func");
	
	ACG_GroupTab_Dlg = DialogControlHookupStandard (c_triggerControlTypePanel, ACG_GroupTab_DlgPath);
	
	for(i = 0;i<c_ACG_MaxControlGroups;i+=1) {
		ACG_GroupButton_Dlg[i] = DialogControlHookupStandard (c_triggerControlTypeButton, ACG_GroupButton_DlgPath[i]);
		TriggerAddEventDialogControl (t, c_playerAny, ACG_GroupButton_Dlg[i], c_triggerControlEventTypeClick);
		TriggerAddEventDialogControl (t, c_playerAny, ACG_GroupButton_Dlg[i], c_triggerControlEventTypeHotkeyPressed);
		
		ACG_GroupButtonAssign_Dlg[i] = DialogControlHookupStandard (c_triggerControlTypeButton, ACG_GroupButtonAssign_DlgPath[i]);
		TriggerAddEventDialogControl (t, c_playerAny, ACG_GroupButtonAssign_Dlg[i], c_triggerControlEventTypeClick);
		TriggerAddEventDialogControl (t, c_playerAny, ACG_GroupButtonAssign_Dlg[i], c_triggerControlEventTypeHotkeyPressed);
		
		// SUBGROUP STUFF REMOVED
		// for(j = 0;j<c_ACG_MaxSubGroups;j+=1) {
			// ACG_SubGroupCmd_Dlg[i][j] = DialogControlHookupStandard (c_triggerControlTypeCommandPanel, ACG_SubGroupCmd_DlgPath[i][j]);
			// ACG_SubGroupIcon_Dlg[i][j] = DialogControlHookupStandard (c_triggerControlTypeImage, ACG_SubGroupIcon_DlgPath[i][j]);
		// }
	}
}

void ACG_InitDummies(){
	int player;
	point unitPos = RegionGetCenter(RegionEntireMap());
	for(player=0;player < c_maxPlayers;player+=1){
		ACG_Dummies[player] = UnitCreate(1,"ACG_DUMMY",c_unitCreateIgnorePlacement, player,unitPos,0.0);
		//ACG_Dummies[player] = UnitCreate(1,"Probe",c_unitCreateIgnorePlacement, player,unitPos,0.0);
	}
}

void ACG_AssignDummyGroup(int player, int groupindex){
	unitgroup dummies = ACG_Dummies[player];
	playergroup pg = PlayerGroupSingle(player);
	int i = 0;
	unit u = UnitGroupUnit(dummies, 1);
	string unittype = UnitGetType(u);
	string icon = CatalogFieldValueGet(c_gameCatalogActor, unittype, "UnitIcon", c_playerAny);
	
	// TriggerDebugOutput(1, StringToText(icon), true);
	
	// SUBGROUP STUFF REMOVED
	// for(i = 0;i<c_ACG_MaxSubGroups;i+=1) {
		// DialogControlSetPropertyAsString (ACG_SubGroupIcon_Dlg[groupindex][i], c_triggerControlPropertyImage, pg, icon);
		// DialogControlSetPropertyAsUnitGroup(ACG_SubGroupCmd_Dlg[groupindex][i], c_triggerControlPropertyUnitGroup, pg, dummies);
	// }

}

void ACG_AssignGroup(int player, int groupindex, unitgroup controlgroup){
	unitgroup ug = UnitGroupCopy(controlgroup);
	unitgroup current;
	playergroup pg = PlayerGroupSingle(player);
	unit u;
	string unittype;
	string icon;
	int i = 0;
	
	ACG_AssignDummyGroup(player,groupindex);
	for(i = 0;i<c_ACG_MaxSubGroups;i+=1) {
		u = UnitGroupUnit(ug, 1);
		unittype = UnitGetType(u);
		current = UnitGroupFilter (unittype, player, ug, null, 0);
		if (UnitGroupCount (current, c_unitCountAlive) <= 0){
			break;
		}
		else {
			ACG_ControlSubGroups[player][groupindex][i] = current;
			icon = CatalogFieldValueGet(c_gameCatalogActor, unittype, "UnitIcon", c_playerAny);
			UnitGroupRemoveUnitGroup (ug, current);
			
			// DialogControlSetPropertyAsString (ACG_SubGroupIcon_Dlg[groupindex][i], c_triggerControlPropertyImage, pg, icon);
			// DialogControlSetPropertyAsUnitGroup(ACG_SubGroupCmd_Dlg[groupindex][i], c_triggerControlPropertyUnitGroup, pg, current);
			// TriggerDebugOutput(1, StringToText(icon), true);
		}
	}
}

void ACG_SelectGroup(int player, int group){
	
}

bool ACG_ButtonClickResponse_Func (bool testConds, bool runActions) {
	int player = EventPlayer();
	unitgroup ug = UnitGroupSelected(player);
	playergroup pg = PlayerGroupSingle(player);
	int i;
	int j;
	int dlg = EventDialogControl ();
	int event = EventDialogControlEventType();
	
	for(i = 0;i<c_ACG_MaxControlGroups;i+=1) {
		if (dlg == ACG_GroupButton_Dlg[i]){
			if	(
					(event == c_triggerControlEventTypeClick)&&
					(EventDialogControlMouseButton() == c_mouseButtonRight)
				){
				ACG_AssignGroup(player,i,ug);
			}
			break;
		}
	}
	
	for(i = 0;i<c_ACG_MaxControlGroups;i+=1) {
		if (dlg == ACG_GroupButtonAssign_Dlg[i]){
		
			if	(
					(event == c_triggerControlEventTypeClick)
				){
				ACG_AssignGroup(player,i,ug);
				DialogControlSetAnimationState (ACG_GroupTab_Dlg, pg, "SelectedGroup", "0");
			}
			break;
		}
	}
	return true;
}

void InitACG() {
	// InitACGUIPaths();
	// InitACGUIHookups();	
	// ACG_InitDummies();	
	// ACG_InitDummies();	
}