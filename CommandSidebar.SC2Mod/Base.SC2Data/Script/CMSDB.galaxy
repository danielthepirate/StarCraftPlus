include "Script/CMSDB_h"


//--------------------------------------------------------------------------------------------------
// Custom Script: IsActiveUser
//--------------------------------------------------------------------------------------------------
bool IsActiveUser (int player) {
    bool active = (PlayerStatus(player) == c_playerStatusActive);
    bool user = (PlayerType(player) == c_playerTypeUser);
    return (active && user);
}
//--------------------------------------------------------------------------------------------------





struct CMSDB_SidebarPaths{
	string[2] builder;
	string[2] trainer;
	string[2] researcher;
};

CMSDB_SidebarPaths sidebarPaths;

void CMSDB_SidebarPathsInit(){
	sidebarPaths.builder[0] = "UIContainer/ConsoleUIContainer/BuilderCommandContainer/CommandPanel1";
	sidebarPaths.trainer[0] = "UIContainer/ConsoleUIContainer/TrainerCommandContainer/CommandPanel1";
	sidebarPaths.researcher[0] = "UIContainer/ConsoleUIContainer/ResearcherCommandContainer/CommandPanel1";
	
	sidebarPaths.builder[1] = "UIContainer/ConsoleUIContainer/BuilderCommandContainer/CommandPanel2";
	sidebarPaths.trainer[1] = "UIContainer/ConsoleUIContainer/TrainerCommandContainer/CommandPanel2";
	sidebarPaths.researcher[1] = "UIContainer/ConsoleUIContainer/ResearcherCommandContainer/CommandPanel2";
}

struct CMSDB_PlayerData{
	int sidebar;
	playergroup pg;
	string race;
	unitgroup dummies;
	unitgroup idleWorkers;
	unitgroup townhalls;
	
};
CMSDB_PlayerData[c_maxPlayers] playerData;


struct CMSDB_OrderRedirectData{
	int useIdle;
	string abil;
	string dummyCaster;
	string realCaster;
};

typedef structref<CMSDB_OrderRedirectData> CMSDB_OrderRedirect;


trigger CMSDB_ReplaceBuildOrders;

bool CMSDB_OrderRedirectGetFromUserData(CMSDB_OrderRedirect orderdata, string abil){
	string CMDSBOrderRedirectData = "ComandSidebarOrderRedirect";
	orderdata.abil = abil;
	orderdata.useIdle = UserDataGetInt(CMDSBOrderRedirectData, abil, "UseIdle", 1);
	orderdata.dummyCaster = UserDataGetUnit(CMDSBOrderRedirectData, abil, "DummyCaster", 1);
	orderdata.realCaster = UserDataGetUnit(CMDSBOrderRedirectData, abil, "RealCaster", 1);
	return true;
}


bool CMSDB_ReplaceBuildOrders_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit u;
    unitgroup ug;
    unit dummy;
    point lv_position;
	string abil;
	int player;
	region r;
	order o;
	CMSDB_OrderRedirectData orderdata;
	
	r = RegionEntireMap();
    u = UnitGroupUnit(UnitGroupIdle(1, true), 1);
    dummy = EventUnit();
	player = 1;
	o = EventUnitOrder();
	
	abil = AbilityCommandGetAbility(OrderGetAbilityCommand(o));
	
	CMSDB_OrderRedirectGetFromUserData(orderdata, abil);
	
    if (testConds) {
        if (!((UnitGetType(dummy) == orderdata.dummyCaster))) {
            return false;
        }
    }
	
	if(orderdata.useIdle>0){
		ug = UnitGroupIdle(1, true);
		u = UnitGroupUnit(ug, 1);
	}
	else{
		ug = UnitGroup (orderdata.realCaster, player, r, null, 0);
		u = UnitGroupUnit(ug, 1);
	}
	
	if(AbilityClass(abil)==c_classIdCAbilBuild){
		UnitIssueOrder(dummy, Order(AbilityCommand("stop", c_abilStopCmdStop)), c_orderQueueReplace);
		UnitGroupIssueOrder(ug, o, c_orderQueueReplace);
		//UnitIssueOrder(u, o, c_orderQueueReplace);
	}
	else if(AbilityClass(abil)==c_classIdCAbilResearch){
		
		UnitIssueOrder(dummy, Order(AbilityCommand("que5", c_abilQueueCmdCancelLast)), c_orderQueueReplace);
		UnitGroupIssueOrder(ug, o, c_orderQueueReplace);
		//UnitIssueOrder(u, o, c_orderQueueReplace);
	}
	else if(AbilityClass(abil)==c_classIdCAbilTrain){
		
		UnitIssueOrder(dummy, Order(AbilityCommand("que5", c_abilQueueCmdCancelLast)), c_orderQueueReplace);
		UnitGroupIssueOrder(ug, o, c_orderQueueReplace);
		//UnitIssueOrder(u, o, c_orderQueueReplace);
	}
	else if(AbilityClass(abil)==c_classIdCAbilWarpTrain){
		
		UnitIssueOrder(dummy, Order(AbilityCommand("que5", c_abilQueueCmdCancelLast)), c_orderQueueReplace);
		UnitGroupIssueOrder(ug, o, c_orderQueueReplace);
		//UnitIssueOrder(u, o, c_orderQueueReplace);
	}
	
    return true;
}









void CMSDB_AttachDummyToSidebar(unitgroup u, playergroup pg, string sidebar, string submenu){
    int SideBarDlg = DialogControlHookupStandard(c_triggerControlTypeCommandPanel, sidebar);
	DialogControlSetPropertyAsUnitGroup(SideBarDlg, c_triggerControlPropertyUnitGroup, pg, u);
	if (submenu!=null){
		DialogControlSetPropertyAsString (SideBarDlg, c_triggerControlPropertySubmenu, pg, submenu);
	}
}

void CMSDB_PlayerDataInit(){
	int Player = 1;
	string CMSDBDummyUserData = "ComandSidebarDummyUnits";
	string DummyBuilderType;
    point unitPos = RegionGetCenter(RegionEntireMap());
	for(Player=0;Player < c_maxPlayers;Player+=1){
		if (IsActiveUser(Player)) {
            playerData[Player].race = PlayerRace (Player);
            playerData[Player].pg = PlayerGroupSingle(Player);
			DummyBuilderType = UserDataGetUnit(CMSDBDummyUserData, playerData[Player].race, "Builder", 1);
            playerData[Player].dummies = UnitGroupEmpty();
			UnitGroupAddUnitGroup(playerData[Player].dummies, UnitCreate(1,DummyBuilderType,c_unitCreateIgnorePlacement, Player,unitPos,0.0));
			CMSDB_AttachDummyToSidebar(playerData[Player].dummies, playerData[Player].pg, sidebarPaths.researcher[0],"PRsrch");
			CMSDB_AttachDummyToSidebar(playerData[Player].dummies, playerData[Player].pg, sidebarPaths.builder[0],"PBuild");
			CMSDB_AttachDummyToSidebar(playerData[Player].dummies, playerData[Player].pg, sidebarPaths.trainer[0],"PTrain");
			
			
			UnitCreate(2,"Probe",c_unitCreateIgnorePlacement, Player,unitPos,0.0);
			PlayerModifyPropertyInt (Player, c_playerPropMinerals, c_playerPropOperSetTo, 5000);
			PlayerModifyPropertyInt (Player, c_playerPropVespene, c_playerPropOperSetTo, 5000);
        }
	}
}


void CMSDB_Init(){
	int i = 0;
	int j = 0;
	string CMDSBOrderRedirectData = "ComandSidebarOrderRedirect";
	int TotalItems = UserDataInstanceCount(CMDSBOrderRedirectData);
	string abil;
	
	
	CMSDB_ReplaceBuildOrders = TriggerCreate("CMSDB_ReplaceBuildOrders_Func");
	CMSDB_SidebarPathsInit();
	CMSDB_PlayerDataInit();
	
	for(i = 1;i<=TotalItems;i+=1){
		abil = UserDataInstance (CMDSBOrderRedirectData, i);
		for(j=0;j<32;j+=1){
			TriggerAddEventUnitOrder(CMSDB_ReplaceBuildOrders, null, AbilityCommand(abil, j));
		}
	}
}

void InitCommandSideBar(){
	CMSDB_Init();
}